@charset "utf-8";
@import url("https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap");
@import "_variables", "_mixins";
// body {
//   background-color: $base-background-color;
// }
.container {
  @include setContainerMinMax(max, 1600, 20, true, 1440);
  padding-bottom: 100px;
  overflow-x: auto;
  min-height: 100vh;
}
.fix-content {
  @include setPosition(fixed, left, 50%, top, 0, -50%);
  width: 100%;
  background-color: $base-background-color;
  border-bottom: 1px solid map-get($primary, 500);
  z-index: 100;
}
h1 {
  @include setFontStyle(map-get($font, xl4-40), map-get($primary, 75), 700);
  max-width: 1600px;
  padding: 32px 20px;
  // margin: 0 auto;
}
h2 {
  @include setFontStyle(map-get($font, xl6-64), map-get($gray, 800));
  margin: 50px 0 24px;
}
h3 {
  @include setFontStyle(map-get($font, xl3-32), map-get($gray, 700));
  margin: 50px 0 24px;
}
h2 + h3 {
  margin: 0 0 24px;
}
.info-text {
  @include setFontStyle(map-get($font, sm-24), map-get($gray, 700), 300);
  margin: 4px 0 0 4px;
  white-space: nowrap;
  &:first-of-type {
    margin-top: 12px;
  }
}
.design-system-list {
  padding-top: 120px;
  & .section-label {
    @include setFontStyle(map-get($font, md-24), map-get($gray, 700), 300);
    margin-bottom: 12px;
    & * {
      color: map-get($gray, 75);
    }
  }
  & .info-list li {
    @include setFontStyle(map-get($font, sm-24), map-get($gray, 50));
    margin-bottom: 8px;
  }
  & table {
    margin-bottom: 50px;
    & * {
      color: map-get($gray, 700);
      line-height: 1.4;
    }
    & th {
      @include setFontStyle(map-get($font, md-24), map-get($gray, 500));
      padding: 24px;
      text-align: left;
    }
    & td {
      padding: 24px;
      vertical-align: middle;
      & li {
        margin-bottom: 12px;
      }
    }
    &.line-table {
      $bordercolor: $gray400;
      & tr:last-of-type {
        & th,
        & td {
          border-bottom: 0;
        }
      }
      & th,
      & td {
        border-bottom: 1px solid $bordercolor;
        background-color: $gray25;
        &.left {
          border-left: 1px solid $bordercolor;
        }
      }
      & .no-bd {
        border: 0;
      }
    }
  }
  & .round-box {
    border-radius: 12px;
    padding: 24px;
    border: 1px solid map-get($primary, 500);
    background-color: #272822;
    & > ul > li {
      margin-bottom: 12px;
      color: map-get($neutral_white, 88);

      & * {
        color: map-get($neutral_white, 100);
      }
      &::before {
        display: inline-block;
        content: "\b7\a0";
      }
      &.no-dot::before {
        content: "";
      }
      &:last-of-type {
        margin-bottom: 0;
      }
    }
  }
  & .tab-component {
    &.tab-header {
      & button {
        padding: 12px 24px;
        &.active {
          font-weight: bold;
        }
      }
    }
    &.tab-content {
      & [data-tab-content] {
        & > * {
          padding: 20px;
        }
      }
    }
  }
}

/***** foundations *****/
#Color {
  .flex-item {
    & [class*="bg-"] {
      width: auto;
      height: 100px;
    }
    & p {
      &:first-of-type {
        margin-top: 12px;
        font-weight: 600;
      }
    }
  }
}
#GridSystem {
  & .flex-box {
    margin-bottom: 12px;
  }
  & [class*="grid-item-"],
  & [class*="col"] li {
    @include setFontStyle(map-get($font, sm-24), map-get($primary, 900), 300);
    text-align: center;
    padding: 30px 10px;
    background-color: map-get($primary, 75);
  }
  & [class*="col"] li {
    border-left: 2px solid white;
    &:first-of-type {
      border: 0;
    }
  }
}
#Icongraphy {
  p {
    @include setFontStyle(map-get($font, md-24), map-get($neutral_black, 76), 300);
    margin-top: 12px;
  }
}
#Spacing {
  & .grid-spacing {
    & td {
      text-align: center;
      & span {
        display: inline-block;
        background-color: map-get($primary, 500);
      }
    }
  }
  & .px {
    &0 {
      width: 0px;
      height: 0px;
    }
    &2 {
      width: 2px;
      height: 2px;
    }
    &4 {
      width: 4px;
      height: 4px;
    }
    &6 {
      width: 6px;
      height: 6px;
    }
    &8 {
      width: 8px;
      height: 8px;
    }
    &10 {
      width: 10px;
      height: 10px;
    }
    &12 {
      width: 12px;
      height: 12px;
    }
    &14 {
      width: 14px;
      height: 14px;
    }
    &16 {
      width: 16px;
      height: 16px;
    }
    &18 {
      width: 18px;
      height: 18px;
    }
    &20 {
      width: 20px;
      height: 20px;
    }
    &22 {
      width: 22px;
      height: 22px;
    }
    &24 {
      width: 24px;
      height: 24px;
    }
    &26 {
      width: 26px;
      height: 26px;
    }
    &28 {
      width: 28px;
      height: 28px;
    }
    &30 {
      width: 30px;
      height: 30px;
    }
    &32 {
      width: 32px;
      height: 32px;
    }
    &34 {
      width: 34px;
      height: 34px;
    }
    &36 {
      width: 36px;
      height: 36px;
    }
    &38 {
      width: 38px;
      height: 38px;
    }
    &40 {
      width: 40px;
      height: 40px;
    }
  }
}
#Width {
  & .grid-width {
    & tr:nth-child(1),
    & tr:nth-child(3) {
      & td {
        border: 1px solid #000;
      }
    }
    & span {
      display: inline-block;
      height: 20px;
      background-color: map-get($primary, 500);
    }
  }
}
#Button {
  .btn.mix-primary.hover,
  .btn.text-primary.hover,
  .btn.bg-primary.hover,
  .btn.bd-primary.hover {
    background-color: $primary300;
  }
  .btn.mix-primary.active,
  .btn.text-primary.active,
  .btn.bg-primary.active,
  .btn.bd-primary.active {
    background-color: $primary300;
    box-shadow: 0px 0px 0px 4px $primary75;
  }
  .btn.mix-primary.hover,
  .btn.mix-primary.active {
    color: $white100;
  }
}
#InputTextarea {
  & .tab-line {
    margin-top: 50px;
    &.tab-header {
      display: flex;
    }
    & button {
      flex: 1;
      border: 2px solid $primary75;
      background-color: $primary25;
      margin-right: -4px;
      &:first-of-type {
        border-radius: 10px 0 0 10px;
      }
      &:last-of-type {
        border-radius: 0 10px 10px 0;
      }
    }
  }
  & .input,
  & .textarea {
    &.focus {
      border-color: $primary500;
      box-shadow: 0px 0px 0px 4px $primary75;
    }
  }
}

/***** components *****/
#ToolTip {
  h4 ~ table {
    .tool-tip {
      position: absolute;
      display: block;
    }
  }
}

/***** Cover *****/
$delay: (
  1: 2s,
  2: 2.3s,
  3: 2.9s,
  4: 3.1s,
  5: 3.4s,
);
@keyframes btnShow {
  100% {
    opacity: 1;
  }
}

.cover {
  background-color: $base-background-color;
  min-width: 100vw;
  min-height: 100vh;
  & * {
    font-family: "Kaushan Script", $base-font-family !important;
  }
  & .content {
    width: 100%;
    height: 100%;
    @include setPosition(fixed, left, 0, top, 30px, 0, 0);
  }
  & .drawing-line-wrapper {
    @include setFlexLayout(flex, wrap, flex-start);
    align-items: baseline;
  }
}
.path-cover {
  .drawing-line {
    max-height: 70vh;
  }
  .link-wrapper {
    position: relative;
    top: -80px;
    text-align: center;
    & a {
      @include setFontStyle(map-get($font, xl4-40), $primary50, 400);
      display: block;
      opacity: 0;
      animation: btnShow 1s linear forwards map-get($delay, 5);
      &:last-of-type {
        margin-top: 24px;
      }
    }
  }
  $dash-array: 2171.68310546875;
  @keyframes dash {
    0% {
      stroke-dashoffset: $dash-array;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
  $pen1-array: 60.40981674194336;
  @keyframes pen1 {
    0% {
      stroke-dashoffset: $pen1-array;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
  $pen2-array: 74.51535034179688;
  @keyframes pen2 {
    0% {
      stroke-dashoffset: $pen2-array;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
  $pen3-array: 25.140178680419922;
  @keyframes pen3 {
    0% {
      stroke-dashoffset: $pen3-array;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
  $pen4-array: 11.663827896118164;
  @keyframes pen4 {
    0% {
      stroke-dashoffset: $pen4-array;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }

  .dash {
    stroke-dasharray: $dash-array; /*이 값은 path의 길이와 동일합니다*/
    stroke-dashoffset: $dash-array;
    animation: dash 2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    // animation: dash 2.5s cubic-bezier(0, 0.45, 0.32, 0.97) forwards;
    // titleMotion 1.4s cubic-bezier(0, 0.45, 0.32, 0.97) 1.4s
  }
  .pen1 {
    stroke-dasharray: $pen1-array;
    stroke-dashoffset: $pen1-array;
    animation: pen1 0.3s linear forwards map-get($delay, 1);
  }
  .pen2 {
    stroke-dasharray: $pen2-array;
    stroke-dashoffset: $pen2-array;
    animation: pen2 0.3s linear forwards map-get($delay, 2);
  }
  .pen3 {
    stroke-dasharray: $pen3-array;
    stroke-dashoffset: $pen3-array;
    animation: pen3 0.3s linear forwards map-get($delay, 3);
  }
  .pen4 {
    stroke-dasharray: $pen4-array;
    stroke-dashoffset: $pen4-array;
    animation: pen4 0.3s linear forwards map-get($delay, 4);
  }

  $text-dash-array: 100;
  @keyframes textDash {
    0% {
      stroke-dasharray: $text-dash-array;
      stroke-dashoffset: $text-dash-array;
      fill: transparent;
      stroke: white;
    }
    100% {
      stroke-dashoffset: 0;
      stroke: white;
      fill: rgba(255, 255, 255, 0.8);
    }
  }
  .text-dash {
    stroke-dasharray: $text-dash-array;
    animation: textDash 2.5s linear forwards map-get($delay, 3);
  }
}
@include respond(1620) {
  .path-cover {
    .drawing-line {
      width: calc(100% - 400px);
    }
  }
}
@include respond(998) {
  .path-cover {
    .drawing-line,
    .link-wrapper {
      @include setPositionCenter;
    }
    .drawing-line {
      width: 100%;
      opacity: 0.5;
      transform: translate(-50%, -50%) scaleY(-1) rotate(20deg);
    }
  }
}
@include respond(400) {
  .link-wrapper {
    width: 90%;
    & svg {
      width: 100%;
    }
  }
}
