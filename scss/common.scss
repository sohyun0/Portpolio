@charset "utf-8";
@import "../design_system/scss/_variables.scss", "../design_system/scss/_mixins.scss";
$bg-color-light: $gray50;
$bg-color-dark: $base-background-color;
$color-dark: $gray300;
$sub-color-dark: $gray500;
.only-tablet-mobile {
  display: none;
}
.wrapper {
  background-color: $bg-color-light;
  padding: 104px 0 50px;
}
.container {
  @include setContainerMinMax($isContainerWidth: 1028, $isSideMargin: 24);
  &:not(:first-of-type) {
    position: relative;
    margin-top: 4px;
    &::before {
      @include createPseudoElement;
      @include setPosition(absolute, left, 50%, top, -4px, -50%);
      width: 100vw;
      height: 4px;
      background-color: $gray600;
    }
  }
  & .pd-box {
    padding: 24px 0;
  }
}
.mode-toggle {
  & input.toggle.right + label::after {
    border: 1px solid $gray300;
  }
  & span {
    vertical-align: middle;
    @include setFontStyle(map-get($font, sm-24));
  }
}
.title {
  @include setFontStyle(map-get($font, xl6-64), $primary600, 700);
  letter-spacing: 2px;
  margin-bottom: 24px;
}
.hyphen-list {
  margin-top: 16px;
  & li {
    @include setFontStyle(map-get($font, sm-24), $gray700, 400);
    padding-left: 4px;
    text-indent: -4px;
    &::before {
      content: "-";
    }
  }
}
.decimal-list {
  margin-top: 16px;
  padding: 16px 16px 16px 35px;
  border: 2px dashed $gray700;
  border-radius: 16px;
  & li {
    @include setFontStyle(map-get($font, sm-24), $gray900, 400);
    list-style: decimal;
    margin-bottom: 8px;
    &:last-of-type {
      margin-bottom: 0;
    }
  }
}
.img-group {
  & [class*="grid-item"] {
    border-radius: 12px;
  }
  & img {
    width: 100%;
    border-radius: 12px;
  }
}

/*라이브러리*/
.swiper {
  & .with-progressbar {
    & .swiper-slide {
      & img {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
  }
  & [class*="swiper-button"] {
    &::after {
      display: none;
    }
  }
  & .swiper-pagination {
    &-progressbar {
      top: auto;
      bottom: 0;
      background-color: $black24;
      & .swiper-pagination-progressbar-fill {
        background-color: $secondary600;
      }
    }
  }
  .swiper-button-next,
  .swiper-button-prev {
    $size: calc(var(--swiper-navigation-size) / 44 * 27);
    height: $size;
    &::before {
      @include createPseudoElement;
      @include setPositionCenter;
      width: $size;
      height: $size;
      background-color: #fff;
      border-radius: 50%;
    }
    & .ic {
      width: 100%;
      height: 100%;
    }
  }
}

@include respond(768) {
  .only-tablet-mobile {
    display: block;
  }
}
@include respond(640) {
}
@include respond(480) {
  .wrapper {
    padding: convertPxToVw(100, 480) 0 convertPxToVw(50, 480);
  }
  .container {
    padding: 0 convertPxToVw(24, 480);
    & .pd-box {
      padding: convertPxToVw(24, 480) 0;
    }
  }
  .title {
    font-size: 1rem;
  }
  .hyphen-list {
    margin-top: convertPxToVw(16, 480);
  }
  .decimal-list {
    margin-top: convertPxToVw(16, 480);
    padding-left: convertPxToVw(16, 480) convertPxToVw(16, 480) convertPxToVw(16, 480) convertPxToVw(35, 480);
    border-radius: convertPxToVw(16, 480);
    & li {
      margin-bottom: convertPxToVw(8, 480);
      &:last-of-type {
        margin-bottom: 0;
      }
    }
  }
  .tag-wrapper {
    margin-top: convertPxToVw(8, 480);
  }
}
@include respond(380) {
  .wrapper {
    padding-top: convertPxToVw(130, 480);
  }
  .mode-toggle {
    & span {
      display: block;
    }
    & input.toggle.right:checked + label::before {
      top: calc(50% + 5px);
    }
  }
}
.dark {
  &.wrapper {
    background-color: $bg-color-dark;
  }
  .mode-toggle {
    & span {
      color: $color-dark;
    }
  }
  .decimal-list {
    border-color: $color-dark;
  }
  .hyphen-list li {
    color: $sub-color-dark;
  }
  .decimal-list li {
    color: $color-dark;
  }
  .swiper {
    & .swiper-pagination {
      &-progressbar {
        background-color: $white24;
      }
    }
  }
}
